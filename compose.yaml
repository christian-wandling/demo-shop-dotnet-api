services:
    db:
        image: postgres
        environment:
            - POSTGRES_PASSWORD
            - POSTGRES_USER
            - POSTGRES_DB
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend
            - shared
        ports:
            - '127.0.0.1:5432:5432'
    api:
        build:
            context: .
            dockerfile: src/DemoShop.Api/Dockerfile
            target: dev
        command: [ "dotnet", "watch", "--no-restore", "run", "--no-restore", "--project", "src/DemoShop.Api/DemoShop.Api.csproj", "--urls", "http://+:3000" ]
        ports:
            - "3000:3000"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:3000
            - SENTRY__DSN=${SENTRY_DSN}
            - KEYCLOAK__REALM=${KEYCLOAK_REALM}
            - KEYCLOAK__RESOURCE=${KEYCLOAK_CLIENT}
            - KEYCLOAK__AUTHSERVERURL=${KEYCLOAK_URL}
        networks:
            - backend
            - shared
        volumes:
            - ./:/app
            - /app/src/DemoShop.Api/bin/
            - /app/src/DemoShop.Api/obj/
            - /app/src/DemoShop.Application/bin/
            - /app/src/DemoShop.Application/obj/
            - /app/src/DemoShop.Domain/bin/
            - /app/src/DemoShop.Domain/obj/
            - /app/src/DemoShop.Infrastructure/bin/
            - /app/src/DemoShop.Infrastructure/obj/
            - nuget-packages:/root/.nuget/packages

networks:
    backend:
    shared:
        external: true

volumes:
    postgres_data:
    nuget-packages:

